initSidebarItems({"enum":[["InputEvent","An input event."],["KeyCode","Represents a virtual key code."]],"fn":[["flush","Flushes the console input buffer."],["get_num_input_events","Returns the number of input events which are available in the console input buffer."],["get_num_mouse_buttons","Returns the number of mouse buttons available for the console."],["get_pressed_keys","Returns a list of keys that are currently in the pressed state."],["is_key_down","Returns a boolean representing whether or not the key is currently pressed."],["is_key_toggled","Returns a boolean representing whether or not a key such as CapsLock or NumLock is toggled. This is insignificant for non-toggle keys."],["start","Creates and returns an InputContext, and initialises input."],["write","Adds an input event directly to the input buffer."]],"struct":[["ControlKeyState","Flags which represent the state of control keys."],["FocusEvent","Represents an input event which occurred as a result of window focus changing."],["InputContext","Used to obtain input events."],["InputFilter","Flags used to store the state of InputEvent filters."],["KeyEvent","Represents an input event which occurred on the keyboard."],["MouseEvent","Represents an input event which occurred on a mouse button."],["MouseMoveEvent","Represents an input event which occurred as a result of mouse movement."],["MouseWheelEvent","Represents an input event which occurred as a result of a mouse scroll wheel."],["ResizeEvent","Represents an input event which occurred as a result of a buffer resize."]]});